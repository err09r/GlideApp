name: Build and upload release

on:
  push:
    branches:
      - 'master'
    paths-ignore:
      - '.github/**'
      - 'README.md'

jobs:
  build:
    name: Build and upload release
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
        - uses: actions/checkout@v4.1.0
        
        - name: Setup JDK 17
          uses: actions/setup-java@v3.13.0
          with:
            java-version: '17'
            distribution: 'temurin'
            cache: gradle

        - name: Create google-services.json
          env:
            GOOGLE_SERVICES_JSON: ${{ secrets.GOOGLE_SERVICES_JSON }}
          run: echo $GOOGLE_SERVICES_JSON | base64 -di > app/google-services.json

        - name: Create local.properties
          env:
            MAPS_API_KEY: ${{ secrets.MAPS_API_KEY }}
          run: echo -e "MAPS_API_KEY=$MAPS_API_KEY" > ./local.properties

        - name: Create keystore.jks
          env: 
            KEYSTORE_JKS: ${{ secrets.KEYSTORE_JKS }}
          run: echo $KEYSTORE_JKS | base64 -di > app/keystore.jks

        - name: Create keystore.properties
          env:
            KEY_STORE_PATH: keystore.jks
            KEY_STORE_PASSWORD: ${{ secrets.KEY_STORE_PASSWORD }}
            KEY_ALIAS: ${{ secrets.KEY_ALIAS }}
            KEY_PASSWORD: ${{ secrets.KEY_PASSWORD }} 
          run: echo -e "KEY_STORE_PATH=$KEY_STORE_PATH\nKEY_STORE_PASSWORD=$KEY_STORE_PASSWORD\nKEY_ALIAS=$KEY_ALIAS\nKEY_PASSWORD=$KEY_PASSWORD" > ./keystore.properties
        
        - name: Grant execute permission for gradlew
          run: chmod +x gradlew

        - name: Build with Gradle
          run: ./gradlew assembleRelease

        - name: Get APK info
          id: apk-info
          uses: hkusu/apk-info-action@v1.0.3
          with:
            apk-path: app/build/outputs/apk/release/app-release.apk

        - name: Zip mapping.txt
          run: |
            cd app/build/outputs/mapping/release
            zip -r mapping.zip mapping.txt

        - name: Rename release APK
          run: |
            cd app/build/outputs/apk/release
            mv app-release.apk GlideApp-v${{ steps.apk-info.outputs.version-name }}.apk

        - name: Send APK to App Center
          uses: wzieba/AppCenter-Github-Action@v1.3.4
          with:
            appName: ${{ secrets.APP_CENTER_APP_NAME }}
            token: ${{ secrets.APP_CENTER_TOKEN }}
            file: app/build/outputs/apk/release/GlideApp-v${{ steps.apk-info.outputs.version-name }}.apk
            group: Developers
            notifyTesters: true
            
        - name: Create GitHub release
          uses: ncipollo/release-action@v1.13.0
          with:
            name: GlideApp v${{ steps.apk-info.outputs.version-name }}
            tag: v${{ steps.apk-info.outputs.version-name }}
            artifacts: app/build/outputs/apk/release/GlideApp-v${{ steps.apk-info.outputs.version-name }}.apk, app/build/outputs/mapping/release/mapping.zip
            allowUpdates: true
            removeArtifacts: true
            generateReleaseNotes: true
            
